[project]
name = "pmp-analytics"
version = "0.1.0"
description = "a repository of scripts for AZ pmp analytics"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "df-compare-pl>=0.1.3.2",
    "fastexcel>=0.12.1",
    "google-api-python-client>=2.157.0",
    "google-auth-oauthlib>=1.2.1",
    "google-cloud-pubsub>=2.27.2",
    "html5lib>=1.1",
    "ipykernel>=6.29.5",
    "jupyter>=1.1.1",
    "lxml>=5.3.0",
    "nbconvert>=7.16.5",
    "pandas>=2.2.3",
    "paramiko>=3.5.0",
    "polars>=1.19.0",
    "polars-distance>=0.5.3",
    "pyarrow>=18.1.0",
    "pymupdf>=1.25.5",
    "pypdf2>=3.0.1",
    "pyperclip>=1.9.0",
    "python-dotenv>=1.0.1",
    "tableauserverclient>=0.35",
    "toml>=0.10.2",
    "tzdata>=2024.2",
    "xlsx2csv>=0.8.4",
    "xlsxwriter>=3.2.0",
]

[tool.basedpyright]
typeCheckingMode = 'standard'
useLibraryCodeForTypes = true
disableOrganizeImports = true

[tool.ruff]
target-version='py313'

[tool.ruff.format]
quote-style = 'preserve'
indent-style = 'space'

[tool.ruff.lint]
select = ["ALL"]
preview = true
ignore = [
  "ANN003",  # missing-type-kwargs
  "COM812",  # missing-trailing-comma
  "CPY001",  # Missing copyright notice at top of file
  "D100",    # Missing docstring in public module
  "D104",    # Missing docstring in public package
  "D203",    # blank line required before class docstring
  "D205",    # blank line required between summary line and description
  "D211",    # no-blank-line-before-class
  "D212",    # summary on first line of docstring
  "D213",    # multi-line-summary-second-line
  "D405",    # capitalization in docstring section
  "D403",    # capitalization in docstring start
  "D415",    # punctuation in docstring
  "E501",    # line too long
  "EM101",   # raw-string-in-exception
  "FIX002",  # line-contains-todo
  "ISC001",  # Conflicts with formatter ruff
  "T201",    # Print found
  "TD002",   # Missing author in TODO `# TODO(<author_name>): ...`
  "TD003",   # missing-todo-link
  "TRY003",  # raise-vanilla-args
  "Q000",    # prefer double quotes
]
fixable = ["ALL"]
unfixable = [
  # "D", # dont fix docstyle from others
]
# allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"test_*.py" = [
  "S101",    # asserts allowed in tests...
  "ARG",     # Unused function args -> fixtures nevertheless are functionally relevant...
  "FBT",     # don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
  "PLR2004", # Magic value used in comparison, ...
  "S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
]
